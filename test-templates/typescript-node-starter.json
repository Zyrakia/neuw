{
	"name": "Typescript Node Starter",
	"variables": [
		{
			"name": "Project Name",
			"description": "The name of your project",
			"identifier": "projectName",
			"required": true,
			"type": { "base": "string", "rules": [{ "name": "string-constrained", "min": 1 }] }
		},
		{
			"name": "Project Description",
			"description": "The short description of your project",
			"identifier": "projectDescription",
			"default": "",
			"type": { "base": "string" }
		},
		{
			"name": "Use Git",
			"description": "Whether Git should be enabled after the template is built.",
			"identifier": "useGit",
			"default": false,
			"type": "boolean"
		}
	],
	"commands": [
		{
			"stage": "post-write",
			"condition": "useGit === true",
			"command": "git init"
		},
		{
			"stage": "post-write",
			"condition": "useGit === true",
			"command": "git add ."
		},
		{
			"stage": "post-write",
			"command": "npm install"
		}
	],
	"structure": [
		{
			"name": "README.md",
			"content": "# {{ projectName }}"
		},
		{
			"name": "package.json",
			"content": "{\n    \"name\": \"{{ projectName }}\",\n    \"version\": \"1.0.0\",\n    \"description\": \"{{ projectDescription }}\",\n    \"license\": \"MIT\",\n    \"scripts\": {\n        \"start\": \"node ./dist/index.js\",\n        \"build\": \"tsc\"\n    },\n    \"dependencies\": {},\n    \"devDependencies\": {\n        \"@types/node\": \"^12.0.2\",\n        \"typescript\": \"^3.4.5\"\n    }\n}\n"
		},
		{
			"name": "tsconfig.json",
			"content": "{\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"esModuleInterop\": true,\n        \"target\": \"es6\",\n        \"noImplicitAny\": true,\n        \"moduleResolution\": \"node\",\n        \"sourceMap\": true,\n        \"outDir\": \"dist\",\n        \"baseUrl\": \".\",\n        \"paths\": {\n            \"*\": [\n                \"node_modules/*\",\n                \"src/types/*\"\n            ]\n        }\n    },\n    \"include\": [\n        \"src/**/*\"\n    ]\n}"
		},
		{
			"name": ".gitignore",
			"condition": "useGit",
			"content": "### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n.pnpm-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional stylelint cache\n.stylelintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variable files\n.env\n.env.development.local\n.env.test.local\n.env.production.local\n.env.local\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# vuepress v2.x temp and cache directory\n.temp\n\n# Docusaurus cache and generated files\n.docusaurus\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*\n\n### Node Patch ###\n# Serverless Webpack directories\n.webpack/\n\n# Optional stylelint cache\n\n# SvelteKit build / generate output\n.svelte-kit"
		},
		{
			"name": "src",
			"children": [
				{
					"name": "index.ts",
					"content": "console.log('Hello World!');"
				}
			]
		}
	]
}
